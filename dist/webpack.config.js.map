{"version":3,"sources":["../webpack.config.js"],"names":["webpack","require","path","WebpackBundleSizeAnalyzerPlugin","CompressionPlugin","module","exports","entry","join","__dirname","output","publicPath","filename","rules","test","loaders","loader","query","limit","include","exclude","resolve","progressive","optimizationLevel","interlaced","plugins","optimize","OccurrenceOrderPlugin","ProvidePlugin","NoEmitOnErrorsPlugin","asset","algorithm","threshold","minRatio","extensions"],"mappings":"AAAA;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAIE,kCAAkCF,QAAQ,8BAAR,EAAwCE,+BAA9E;AACA,IAAIC,oBAAoBH,QAAQ,4BAAR,CAAxB;;AAGAI,OAAOC,OAAP,GAAiB;;AAEbC,WAAO,CACHL,KAAKM,IAAL,CAAUC,SAAV,EAAqB,iBAArB,CADG,CAFM;;AAMbC,YAAQ;AACJR,cAAMA,KAAKM,IAAL,CAAUC,SAAV,EAAqB,SAArB,CADF;AAEJE,oBAAa,GAFT;AAGJC,kBAAU;AAHN,KANK;;AAYbP,YAAQ;AACJQ,eAAO,CACH;AACIC,kBAAM,QADV;AAEIC,qBAAS,CAAC,cAAD,EAAiB,YAAjB;AAFb,SADG,EAMH;AACID,kBAAM,SADV;AAEIC,qBAAS,CAAC,cAAD,EAAiB,YAAjB,EAA+B,aAA/B;AAFb,SANG,EAWH;AACID,kBAAM,gCADV;AAEIE,oBAAQ,YAFZ;AAGIC,mBAAO;AACHC,uBAAO;AADJ;AAHX,SAXG,EAmBH;AACIJ,kBAAM,aADV;AAEIK,qBAASjB,KAAKM,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAFb;AAGIW,qBAAQ,CAAClB,KAAKmB,OAAL,CAAaZ,SAAb,EAAwB,cAAxB,CAAD,CAHZ;AAIIO,oBAAQ;AAJZ,SAnBG,EA0BH;AACIF,kBAAM,4BADV;AAEIC,qBAAS,CAAE;AACPC,wBAAQ,YADD;AAEPC,uBAAO;AACHC,2BAAO;AADJ;AAFA,aAAF,EAML;AACIF,wBAAQ,sBADZ;AAEIC,uBAAO;AACHK,iCAAa,IADV;AAEHC,uCAAmB,CAFhB;AAGHC,gCAAY;AAHT;AAFX,aANK;AAFb,SA1BG;AADH,KAZK;;AAqEbC,aAAS,CACL,IAAIzB,QAAQ0B,QAAR,CAAiBC,qBAArB,EADK,EAEL,IAAI3B,QAAQ4B,aAAZ,CAA0B;AACtB,iBAAS,OADa;AAEtB,4BAAoB,oBAFE;AAGtB,qBAAa;AAHS,KAA1B,CAFK,EAOL,IAAI5B,QAAQ6B,oBAAZ,EAPK,EAQL,IAAIzB,iBAAJ,CAAsB;AAClB0B,eAAO,kBADW;AAElBC,mBAAW,MAFO;AAGlBjB,cAAM,sBAHY;AAIlBkB,mBAAW,KAJO;AAKlBC,kBAAU;AALQ,KAAtB,CARK,CArEI;;AA+HbZ,aAAS;AACLa,oBAAY,CAAC,KAAD,EAAQ,MAAR;AADP;AA/HI,CAAjB","file":"webpack.config.js","sourcesContent":["'use strict';\r\n\r\nconst webpack = require('webpack');\r\nconst path = require('path');\r\nvar WebpackBundleSizeAnalyzerPlugin = require('webpack-bundle-size-analyzer').WebpackBundleSizeAnalyzerPlugin;\r\nlet CompressionPlugin = require('compression-webpack-plugin');\r\n\r\n\r\nmodule.exports = {\r\n\r\n    entry: [\r\n        path.join(__dirname, 'client/index.js')\r\n    ],\r\n\r\n    output: {\r\n        path: path.join(__dirname, 'public/'),\r\n        publicPath:  '/',\r\n        filename: 'bundle.js'\r\n    },\r\n\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.css$/,\r\n                loaders: ['style-loader', 'css-loader']\r\n            },\r\n\r\n            {\r\n                test: /\\.sass$/,\r\n                loaders: ['style-loader', 'css-loader', 'sass-loader']\r\n            },\r\n\r\n            {\r\n                test: /(.woff2|.woff|.eot|.ttf|.otf)$/,\r\n                loader: 'url-loader',\r\n                query: {\r\n                    limit: 10000\r\n                }\r\n            },\r\n\r\n            {\r\n                test: /\\.(js|jsx)$/,\r\n                include: path.join(__dirname, 'client'),\r\n                exclude:[path.resolve(__dirname, \"node_modules\")],\r\n                loader: 'babel-loader'\r\n            },\r\n\r\n            {\r\n                test: /\\.(gif|png|jpeg|jpg|svg)$/i,\r\n                loaders: [ {\r\n                    loader: 'url-loader',\r\n                    query: {\r\n                        limit: 10000\r\n                    }\r\n                     },\r\n                    {\r\n                        loader: 'image-webpack-loader',\r\n                        query: {\r\n                            progressive: true,\r\n                            optimizationLevel: 7,\r\n                            interlaced: false\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n\r\n            // {\r\n            //     test: /\\.sass$/,\r\n            //     use: ExtractTextPlugin.extract({\r\n            //         fallback: 'style-loader',\r\n            //         //resolve-url-loader may be chained before sass-loader if necessary\r\n            //         use: ['css-loader', 'sass-loader']\r\n            //     })\r\n            // }\r\n        ]\r\n    },\r\n\r\n    plugins: [\r\n        new webpack.optimize.OccurrenceOrderPlugin(),\r\n        new webpack.ProvidePlugin({\r\n            'React': 'react',\r\n            \"createReactClass\": \"create-react-class\",\r\n            \"PropTypes\": \"prop-types\"\r\n        }),\r\n        new webpack.NoEmitOnErrorsPlugin(),\r\n        new CompressionPlugin({\r\n            asset: '[path].gz[query]',\r\n            algorithm: 'gzip',\r\n            test: /\\.js$|\\.css$|\\.html$/,\r\n            threshold: 10240,\r\n            minRatio: 0.8\r\n        }),\r\n        // new webpack.optimize.UglifyJsPlugin({\r\n        //     minimize: true,\r\n        //     sourceMap: false,\r\n        //     compress: {\r\n        //         warnings: false,\r\n        //         drop_console: false,\r\n        //         side_effects: false,\r\n        //         properties: true,\r\n        //         sequences: true,\r\n        //         dead_code: true,\r\n        //         conditionals: true,\r\n        //         comparisons: true,\r\n        //         evaluate: true,\r\n        //         booleans: true,\r\n        //         unused: true,\r\n        //         loops: true,\r\n        //         hoist_funs: true,\r\n        //         cascade: true,\r\n        //         if_return: true,\r\n        //         join_vars: true,\r\n        //         drop_debugger: true,\r\n        //         unsafe: true,\r\n        //         hoist_vars: true,\r\n        //         negate_iife: true,\r\n        //         unsafe_comps: true,\r\n        //         screw_ie8: true,\r\n        //         pure_getters: true\r\n        //     },\r\n        //     mangle: {\r\n        //         sort: true,\r\n        //         eval: true,\r\n        //         toplevel: true,\r\n        //         properties: true\r\n        //     },\r\n        //     output: {\r\n        //         comments: false,\r\n        //         beautify: false,\r\n        //         space_colon: false\r\n        //     },\r\n        //     exclude: [/\\.min\\.js$/gi]\r\n        // })\r\n    ],\r\n\r\n    resolve: {\r\n        extensions: ['.js', '.jsx']\r\n    }\r\n}"]}